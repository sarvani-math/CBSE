# -*- coding: utf-8 -*-
"""tangents.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GvuGl_svfgTfgLcmydFs9PfnODPn8p54
"""


import numpy as np
import mpmath as mp
import matplotlib.pyplot as plt
from numpy import linalg as LA
import sys

sys.path.insert(0, '/Users/gvv/Desktop/CoordGeo')        #path to my scripts

#local imports
from line.funcs import *
from triangle.funcs import *
from conics.funcs import circ_gen


r = 4
d = 8

e1 = np.array(([1,0]))

O = d*e1 #Centre
P = np.array(([0,0]))
theta = mp.asin(r/d)

Q1 = r*mp.cot(theta)*np.array(([mp.cos(theta),mp.sin(theta)]))
Q2 = r*mp.cot(theta)*np.array(([mp.cos(theta),-mp.sin(theta)]))

xPQ1 = line_gen(P,Q1)
xPQ2 = line_gen(P,Q2)

x_circ= circ_gen(O,r)

plt.plot(xPQ1[0,:],xPQ1[1,:],label='$Tangent1$')
plt.plot(xPQ2[0,:],xPQ2[1,:],label='$Tangent2$')
plt.plot(x_circ[0,:],x_circ[1,:],label='$Circle$')
#Labeling the coordinates
tri_coords = np.vstack((P,Q1,Q2,O)).T
plt.scatter(tri_coords[0,:], tri_coords[1,:])
vert_labels = ['P','Q1','Q2','O']
for i, txt in enumerate(vert_labels):
    plt.annotate(txt, # this is the text
                 (tri_coords[0,i], tri_coords[1,i]), # this is the point to label
                 textcoords="offset points", # how to position the text
                 xytext=(0,10), # distance from text to points (x,y)
                 ha='center') # horizontal alignment can be left, right or center

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')
plt.show()

